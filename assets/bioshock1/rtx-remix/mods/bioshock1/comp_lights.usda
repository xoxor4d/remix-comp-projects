#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_0B41BE2FA8F5DBF2"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.64790267, 0.2571816, 0.87644786)
                float inputs:intensity = 100
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (17.827950963043804, -145.45000627405852, 181.01034290357006)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_A159BF0D2C06FF02"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:intensity = 100
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-21.070426742609868, 8.479596635249436, 67.13772327698945)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:intensity = 100
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (45.011701933395614, 8.479590858251868, 67.13772327698945)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_8CB005E205C29047"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 5190
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 100
                float inputs:radius = 6
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.887645678129047e-11, 0, 146.11492707020716)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_CC4F5635ECD4E969"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 5490
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 20
                float inputs:radius = 7
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.883145070818614, -0.12008106683856568, 14.970797528552371)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_6A455BBF38DB9A5B"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.85714287, 0.59546137, 0.3210149)
                float inputs:intensity = 20
                float inputs:radius = 55
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                custom float inputs:volumetric_radiance_scale = 0.2
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.24532289161197696, -135.1290070104494, 143.1537997877382)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_C4761B910660317B"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.20891163, 0.5945946, 0.5543883)
                float inputs:intensity = 100
                float inputs:radius = 10.484401
                float inputs:shaping:cone:angle = 64.799995
                float inputs:shaping:cone:softness = 0.90000004
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                custom float inputs:volumetric_radiance_scale = 0
                double3 xformOp:rotateXYZ = (-15.439742732737585, 359.786131013921, 275.6924475824813)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-42.25495471847535, 0.9073357507463697, -4.088072718758212)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.20891163, 0.5945946, 0.5543883)
                float inputs:intensity = 10
                float inputs:radius = 6.0160456
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                custom float inputs:volumetric_radiance_scale = 0
                double3 xformOp:rotateXYZ = (-15.439742732737585, 359.786131013921, 275.6924475824813)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-47.70053591130181, 0.012309249582358461, -15.77406871561709)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.20891163, 0.5945946, 0.5543883)
                float inputs:intensity = 3
                float inputs:radius = 8
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 0
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                custom float inputs:volumetric_radiance_scale = 0
                double3 xformOp:rotateXYZ = (-15.439742732737585, 359.786131013921, 275.6924475824813)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-77.27770296717881, 0.012333215970784295, -289.917668927921)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_46655C016ED2CDA8"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:intensity = 140
                float inputs:length = 10
                float inputs:radius = 10
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                custom float inputs:volumetric_radiance_scale = 0
                double3 xformOp:rotateXYZ = (90.00003042557614, 90, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.6615749076420343, -22.013258769943604, -3.979039320256561e-13)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_2B31B58495AB0655"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 4830
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 10
                float inputs:radius = 32
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                custom float inputs:volumetric_radiance_scale = 0.2
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (85.71717449255266, -78.69226062216512, 117.77695421370504)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_9E02C59C2C1AEB49"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 4170
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 3.7
                float inputs:intensity = 100
                float inputs:radius = 10
                float inputs:shaping:cone:angle = 39.6
                float inputs:shaping:cone:softness = 0.45000002
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                custom float inputs:volumetric_radiance_scale = 0
                double3 xformOp:rotateXYZ = (0.49091173357265916, 40.918597016482096, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.1459633242338896e-10, -20.888890603809614, -2.9558577807620168e-12)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_31D1C5D816A3CD45"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 4170
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 50
                float inputs:length = 10
                float inputs:radius = 12
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90.00002174960326, 90, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.0000018580224150355207, -21.253288944491942, -5.121872267002232)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_DACEE5C7B6ABCD9A"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.3236088, 0.7760618, 0.6979597)
                float inputs:intensity = 100
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-51.091270257496944, -1.4592589000296812, -15.623201476344093)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }

    over "Looks"
    {
        over "mat_A2310F21F5FB2BBD"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 0.9
                custom asset inputs:emissive_mask_texture = @./assets/emissives/BC89F1774530D75C_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
            }
        }
    }
}

